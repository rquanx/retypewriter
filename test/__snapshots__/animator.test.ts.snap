// Vitest Snapshot v1

exports[`animator > animator 1`] = `
[
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () =>   it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () =>  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () =  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', ()   it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', ()  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', (  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should',   it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should',  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should'  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('shoul  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('shou  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('sho  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('sh  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('s  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe('  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe(  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describe  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

describ  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

descri  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

descr  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

desc  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

des  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

de  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

d  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'

  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 105,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toEqua(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toEqu(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toEq(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).toE(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).to(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).t(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one).(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 98,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 82,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)o(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 83,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)on(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 84,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})
",
  },
  {
    "cursor": 123,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
}) 
",
  },
  {
    "cursor": 124,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})  
",
  },
  {
    "cursor": 125,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})   
",
  },
  {
    "cursor": 126,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    
",
  },
  {
    "cursor": 127,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    e
",
  },
  {
    "cursor": 128,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    ex
",
  },
  {
    "cursor": 129,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    exp
",
  },
  {
    "cursor": 130,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expe
",
  },
  {
    "cursor": 131,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expec
",
  },
  {
    "cursor": 132,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect
",
  },
  {
    "cursor": 133,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(
",
  },
  {
    "cursor": 134,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(t
",
  },
  {
    "cursor": 135,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(tw
",
  },
  {
    "cursor": 136,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two
",
  },
  {
    "cursor": 137,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two)
",
  },
  {
    "cursor": 138,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).
",
  },
  {
    "cursor": 139,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).t
",
  },
  {
    "cursor": 140,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).to
",
  },
  {
    "cursor": 141,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toE
",
  },
  {
    "cursor": 142,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEq
",
  },
  {
    "cursor": 143,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqu
",
  },
  {
    "cursor": 144,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqua
",
  },
  {
    "cursor": 145,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqual
",
  },
  {
    "cursor": 146,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqual(
",
  },
  {
    "cursor": 147,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqual(2
",
  },
  {
    "cursor": 148,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqual(2)
",
  },
  {
    "cursor": 149,
    "output": "
import { describe, expect, it } from 'vitest'  it('one', () => {
    expect(one)one(1)
    expect(two).toEqual(2)
  })
})    expect(two).toEqual(2)

",
  },
]
`;
